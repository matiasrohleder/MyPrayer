@using Microsoft.AspNetCore.Identity
@using Entities.Models;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string userName = string.Empty;
    if (SignInManager.IsSignedIn(User))
        userName = (await UserManager.FindByEmailAsync(User.Identity.Name)).Name;
}

<ul class="navbar-nav flex-grow-1">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Index"><i class="fa-solid fa-lg fa-home" title="Inicio"></i></a>
        </li>
    }
</ul>

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <h5 class="nav-link text-light">@userName</h5>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Ajustes"><i class="fa-solid fa-gear fa-lg"></i></a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light"><i class="fa-solid fa-lg fa-arrow-right-from-bracket" title="Cerrar sesión"></i></button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
        </li>
    }
</ul>
